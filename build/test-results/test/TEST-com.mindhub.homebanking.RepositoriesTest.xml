<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.mindhub.homebanking.RepositoriesTest" tests="10" skipped="0" failures="0" errors="0" timestamp="2021-12-09T12:34:12" hostname="DESKTOP-VJM2ENL" time="0.812">
  <properties/>
  <testcase name="existTypeCard()" classname="com.mindhub.homebanking.RepositoriesTest" time="0.391"/>
  <testcase name="existNumberAccount()" classname="com.mindhub.homebanking.RepositoriesTest" time="0.057"/>
  <testcase name="existCard()" classname="com.mindhub.homebanking.RepositoriesTest" time="0.055"/>
  <testcase name="existAccount()" classname="com.mindhub.homebanking.RepositoriesTest" time="0.045"/>
  <testcase name="existPersonalLoan()" classname="com.mindhub.homebanking.RepositoriesTest" time="0.042"/>
  <testcase name="existRepository()" classname="com.mindhub.homebanking.RepositoriesTest" time="0.047"/>
  <testcase name="existLoans()" classname="com.mindhub.homebanking.RepositoriesTest" time="0.031"/>
  <testcase name="existEmailClient()" classname="com.mindhub.homebanking.RepositoriesTest" time="0.052"/>
  <testcase name="existClient()" classname="com.mindhub.homebanking.RepositoriesTest" time="0.045"/>
  <testcase name="existTypeRepository()" classname="com.mindhub.homebanking.RepositoriesTest" time="0.033"/>
  <system-out><![CDATA[2021-12-09 09:34:11.004  INFO 2684 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.mindhub.homebanking.RepositoriesTest], using SpringBootContextLoader
2021-12-09 09:34:11.006  INFO 2684 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.mindhub.homebanking.RepositoriesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-12-09 09:34:11.006  INFO 2684 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.mindhub.homebanking.RepositoriesTest]: RepositoriesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-12-09 09:34:11.032  INFO 2684 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.mindhub.homebanking.HomebankingApplication for test class com.mindhub.homebanking.RepositoriesTest
2021-12-09 09:34:11.034  INFO 2684 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2021-12-09 09:34:11.035  INFO 2684 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5907c30b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7ead2339, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@6e417d49, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@22cbd091, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@45b35058, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5290073c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@375e8312, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4b6d8230, org.springframework.test.context.event.EventPublishingTestExecutionListener@14833a95, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@467876de, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@57d2b10, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@22a6558d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2ffc84de, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2ab7d979, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@467e5294]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.5.4)

2021-12-09 09:34:11.103  INFO 2684 --- [    Test worker] c.mindhub.homebanking.RepositoriesTest   : Starting RepositoriesTest using Java 11.0.12 on DESKTOP-VJM2ENL with PID 2684 (started by Usuario in C:\Users\Usuario\Desktop\backUpHomebanking\CarlosFarfanM3T2\CarlosFarfanM3T2\homebanking\homebanking)
2021-12-09 09:34:11.106  INFO 2684 --- [    Test worker] c.mindhub.homebanking.RepositoriesTest   : No active profile set, falling back to default profiles: default
2021-12-09 09:34:11.298  INFO 2684 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 09:34:11.339  INFO 2684 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.
2021-12-09 09:34:11.532  INFO 2684 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 09:34:11.545  INFO 2684 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2021-12-09 09:34:11.596  INFO 2684 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2021-12-09 09:34:11.596  INFO 2684 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-12-09 09:34:12.083  INFO 2684 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 09:34:12.083  INFO 2684 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 09:34:12.084  INFO 2684 --- [    Test worker] f.a.AutowiredAnnotationBeanPostProcessor : Autowired annotation is not supported on static methods: public static void com.mindhub.homebanking.HomebankingApplication.main(java.lang.String[])
2021-12-09 09:34:12.493  INFO 2684 --- [    Test worker] c.mindhub.homebanking.RepositoriesTest   : Started RepositoriesTest in 1.45 seconds (JVM running for 17.352)
2021-12-09 09:34:12.519  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@21a24c09, testMethod = existTypeCard@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@32ec563]; rollback [true]
Hibernate: select card0_.id as id1_1_, card0_.cardholder as cardhold2_1_, card0_.client_id as client_i9_1_, card0_.color as color3_1_, card0_.cvv as cvv4_1_, card0_.from_date as from_dat5_1_, card0_.number as number6_1_, card0_.thru_date as thru_dat7_1_, card0_.type as type8_1_ from card card0_
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.client_id as client_i9_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.client_id as client_i9_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.thru_date as thru_dat7_1_6_, cards3_.type as type8_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_, loan5_.percentage as percenta4_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.client_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.client_id as client_i9_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.client_id as client_i9_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.thru_date as thru_dat7_1_6_, cards3_.type as type8_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_, loan5_.percentage as percenta4_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.client_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.client_id as client_i9_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.client_id as client_i9_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.thru_date as thru_dat7_1_6_, cards3_.type as type8_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_, loan5_.percentage as percenta4_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.client_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
2021-12-09 09:34:12.893  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@21a24c09, testMethod = existTypeCard@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2021-12-09 09:34:12.897  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@3a5bdeec, testMethod = existNumberAccount@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@32ec563]; rollback [true]
Hibernate: select account0_.id as id1_0_, account0_.balance as balance2_0_, account0_.client_id as client_i5_0_, account0_.creation_date as creation3_0_, account0_.number as number4_0_ from account account0_
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.client_id as client_i9_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.client_id as client_i9_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.thru_date as thru_dat7_1_6_, cards3_.type as type8_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_, loan5_.percentage as percenta4_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.client_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.client_id as client_i9_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.client_id as client_i9_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.thru_date as thru_dat7_1_6_, cards3_.type as type8_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_, loan5_.percentage as percenta4_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.client_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.client_id as client_i9_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.client_id as client_i9_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.thru_date as thru_dat7_1_6_, cards3_.type as type8_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_, loan5_.percentage as percenta4_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.client_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
2021-12-09 09:34:12.951  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@3a5bdeec, testMethod = existNumberAccount@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2021-12-09 09:34:12.957  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@7dc46fc5, testMethod = existCard@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@32ec563]; rollback [true]
Hibernate: select card0_.id as id1_1_, card0_.cardholder as cardhold2_1_, card0_.client_id as client_i9_1_, card0_.color as color3_1_, card0_.cvv as cvv4_1_, card0_.from_date as from_dat5_1_, card0_.number as number6_1_, card0_.thru_date as thru_dat7_1_, card0_.type as type8_1_ from card card0_
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.client_id as client_i9_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.client_id as client_i9_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.thru_date as thru_dat7_1_6_, cards3_.type as type8_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_, loan5_.percentage as percenta4_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.client_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.client_id as client_i9_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.client_id as client_i9_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.thru_date as thru_dat7_1_6_, cards3_.type as type8_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_, loan5_.percentage as percenta4_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.client_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.client_id as client_i9_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.client_id as client_i9_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.thru_date as thru_dat7_1_6_, cards3_.type as type8_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_, loan5_.percentage as percenta4_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.client_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
2021-12-09 09:34:13.008  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@7dc46fc5, testMethod = existCard@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2021-12-09 09:34:13.013  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@727dc5bc, testMethod = existAccount@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@32ec563]; rollback [true]
Hibernate: select account0_.id as id1_0_, account0_.balance as balance2_0_, account0_.client_id as client_i5_0_, account0_.creation_date as creation3_0_, account0_.number as number4_0_ from account account0_
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.client_id as client_i9_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.client_id as client_i9_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.thru_date as thru_dat7_1_6_, cards3_.type as type8_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_, loan5_.percentage as percenta4_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.client_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.client_id as client_i9_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.client_id as client_i9_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.thru_date as thru_dat7_1_6_, cards3_.type as type8_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_, loan5_.percentage as percenta4_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.client_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select client0_.id as id1_2_0_, client0_.email as email2_2_0_, client0_.first_name as first_na3_2_0_, client0_.last_name as last_nam4_2_0_, client0_.password as password5_2_0_, accounts1_.client_id as client_i5_0_1_, accounts1_.id as id1_0_1_, accounts1_.id as id1_0_2_, accounts1_.balance as balance2_0_2_, accounts1_.client_id as client_i5_0_2_, accounts1_.creation_date as creation3_0_2_, accounts1_.number as number4_0_2_, transactio2_.account_id as account_6_6_3_, transactio2_.id as id1_6_3_, transactio2_.id as id1_6_4_, transactio2_.account_id as account_6_6_4_, transactio2_.amount as amount2_6_4_, transactio2_.date as date3_6_4_, transactio2_.description as descript4_6_4_, transactio2_.type as type5_6_4_, cards3_.client_id as client_i9_1_5_, cards3_.id as id1_1_5_, cards3_.id as id1_1_6_, cards3_.cardholder as cardhold2_1_6_, cards3_.client_id as client_i9_1_6_, cards3_.color as color3_1_6_, cards3_.cvv as cvv4_1_6_, cards3_.from_date as from_dat5_1_6_, cards3_.number as number6_1_6_, cards3_.thru_date as thru_dat7_1_6_, cards3_.type as type8_1_6_, clientloan4_.client_id as client_i4_3_7_, clientloan4_.id as id1_3_7_, clientloan4_.id as id1_3_8_, clientloan4_.amount as amount2_3_8_, clientloan4_.client_id as client_i4_3_8_, clientloan4_.loan_id as loan_id5_3_8_, clientloan4_.payments as payments3_3_8_, loan5_.id as id1_4_9_, loan5_.max_amount as max_amou2_4_9_, loan5_.name as name3_4_9_, loan5_.percentage as percenta4_4_9_ from client client0_ left outer join account accounts1_ on client0_.id=accounts1_.client_id left outer join transaction transactio2_ on accounts1_.id=transactio2_.account_id left outer join card cards3_ on client0_.id=cards3_.client_id left outer join client_loan clientloan4_ on client0_.id=clientloan4_.client_id left outer join loan loan5_ on clientloan4_.loan_id=loan5_.id where client0_.id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
2021-12-09 09:34:13.054  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@727dc5bc, testMethod = existAccount@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2021-12-09 09:34:13.060  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@677f0ab8, testMethod = existPersonalLoan@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@32ec563]; rollback [true]
Hibernate: select loan0_.id as id1_4_, loan0_.max_amount as max_amou2_4_, loan0_.name as name3_4_, loan0_.percentage as percenta4_4_ from loan loan0_
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_, loan1_.percentage as percenta4_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.client_id as client_i9_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.client_id as client_i9_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.thru_date as thru_dat7_1_1_, cards0_.type as type8_1_1_ from card cards0_ where cards0_.client_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
2021-12-09 09:34:13.099  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@677f0ab8, testMethod = existPersonalLoan@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2021-12-09 09:34:13.103  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@545eec7c, testMethod = existRepository@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@32ec563]; rollback [true]
Hibernate: select transactio0_.id as id1_6_, transactio0_.account_id as account_6_6_, transactio0_.amount as amount2_6_, transactio0_.date as date3_6_, transactio0_.description as descript4_6_, transactio0_.type as type5_6_ from transaction transactio0_
Hibernate: select account0_.id as id1_0_0_, account0_.balance as balance2_0_0_, account0_.client_id as client_i5_0_0_, account0_.creation_date as creation3_0_0_, account0_.number as number4_0_0_, client1_.id as id1_2_1_, client1_.email as email2_2_1_, client1_.first_name as first_na3_2_1_, client1_.last_name as last_nam4_2_1_, client1_.password as password5_2_1_, cards2_.client_id as client_i9_1_2_, cards2_.id as id1_1_2_, cards2_.id as id1_1_3_, cards2_.cardholder as cardhold2_1_3_, cards2_.client_id as client_i9_1_3_, cards2_.color as color3_1_3_, cards2_.cvv as cvv4_1_3_, cards2_.from_date as from_dat5_1_3_, cards2_.number as number6_1_3_, cards2_.thru_date as thru_dat7_1_3_, cards2_.type as type8_1_3_, clientloan3_.client_id as client_i4_3_4_, clientloan3_.id as id1_3_4_, clientloan3_.id as id1_3_5_, clientloan3_.amount as amount2_3_5_, clientloan3_.client_id as client_i4_3_5_, clientloan3_.loan_id as loan_id5_3_5_, clientloan3_.payments as payments3_3_5_, loan4_.id as id1_4_6_, loan4_.max_amount as max_amou2_4_6_, loan4_.name as name3_4_6_, loan4_.percentage as percenta4_4_6_, transactio5_.account_id as account_6_6_7_, transactio5_.id as id1_6_7_, transactio5_.id as id1_6_8_, transactio5_.account_id as account_6_6_8_, transactio5_.amount as amount2_6_8_, transactio5_.date as date3_6_8_, transactio5_.description as descript4_6_8_, transactio5_.type as type5_6_8_ from account account0_ left outer join client client1_ on account0_.client_id=client1_.id left outer join card cards2_ on client1_.id=cards2_.client_id left outer join client_loan clientloan3_ on client1_.id=clientloan3_.client_id left outer join loan loan4_ on clientloan3_.loan_id=loan4_.id left outer join transaction transactio5_ on account0_.id=transactio5_.account_id where account0_.id=?
Hibernate: select account0_.id as id1_0_0_, account0_.balance as balance2_0_0_, account0_.client_id as client_i5_0_0_, account0_.creation_date as creation3_0_0_, account0_.number as number4_0_0_, client1_.id as id1_2_1_, client1_.email as email2_2_1_, client1_.first_name as first_na3_2_1_, client1_.last_name as last_nam4_2_1_, client1_.password as password5_2_1_, cards2_.client_id as client_i9_1_2_, cards2_.id as id1_1_2_, cards2_.id as id1_1_3_, cards2_.cardholder as cardhold2_1_3_, cards2_.client_id as client_i9_1_3_, cards2_.color as color3_1_3_, cards2_.cvv as cvv4_1_3_, cards2_.from_date as from_dat5_1_3_, cards2_.number as number6_1_3_, cards2_.thru_date as thru_dat7_1_3_, cards2_.type as type8_1_3_, clientloan3_.client_id as client_i4_3_4_, clientloan3_.id as id1_3_4_, clientloan3_.id as id1_3_5_, clientloan3_.amount as amount2_3_5_, clientloan3_.client_id as client_i4_3_5_, clientloan3_.loan_id as loan_id5_3_5_, clientloan3_.payments as payments3_3_5_, loan4_.id as id1_4_6_, loan4_.max_amount as max_amou2_4_6_, loan4_.name as name3_4_6_, loan4_.percentage as percenta4_4_6_, transactio5_.account_id as account_6_6_7_, transactio5_.id as id1_6_7_, transactio5_.id as id1_6_8_, transactio5_.account_id as account_6_6_8_, transactio5_.amount as amount2_6_8_, transactio5_.date as date3_6_8_, transactio5_.description as descript4_6_8_, transactio5_.type as type5_6_8_ from account account0_ left outer join client client1_ on account0_.client_id=client1_.id left outer join card cards2_ on client1_.id=cards2_.client_id left outer join client_loan clientloan3_ on client1_.id=clientloan3_.client_id left outer join loan loan4_ on clientloan3_.loan_id=loan4_.id left outer join transaction transactio5_ on account0_.id=transactio5_.account_id where account0_.id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
2021-12-09 09:34:13.147  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@545eec7c, testMethod = existRepository@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2021-12-09 09:34:13.151  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@131cdc2b, testMethod = existLoans@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@32ec563]; rollback [true]
Hibernate: select loan0_.id as id1_4_, loan0_.max_amount as max_amou2_4_, loan0_.name as name3_4_, loan0_.percentage as percenta4_4_ from loan loan0_
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_, loan1_.percentage as percenta4_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.client_id as client_i9_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.client_id as client_i9_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.thru_date as thru_dat7_1_1_, cards0_.type as type8_1_1_ from card cards0_ where cards0_.client_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
2021-12-09 09:34:13.179  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@131cdc2b, testMethod = existLoans@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2021-12-09 09:34:13.183  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@43d15183, testMethod = existEmailClient@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@32ec563]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.first_name as first_na3_2_, client0_.last_name as last_nam4_2_, client0_.password as password5_2_ from client client0_
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_, loan1_.percentage as percenta4_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.client_id as client_i9_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.client_id as client_i9_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.thru_date as thru_dat7_1_1_, cards0_.type as type8_1_1_ from card cards0_ where cards0_.client_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_, loan1_.percentage as percenta4_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.client_id as client_i9_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.client_id as client_i9_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.thru_date as thru_dat7_1_1_, cards0_.type as type8_1_1_ from card cards0_ where cards0_.client_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_, loan1_.percentage as percenta4_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select cards0_.client_id as client_i9_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.client_id as client_i9_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.thru_date as thru_dat7_1_1_, cards0_.type as type8_1_1_ from card cards0_ where cards0_.client_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
2021-12-09 09:34:13.232  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@43d15183, testMethod = existEmailClient@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2021-12-09 09:34:13.238  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@32015fda, testMethod = existClient@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@32ec563]; rollback [true]
Hibernate: select client0_.id as id1_2_, client0_.email as email2_2_, client0_.first_name as first_na3_2_, client0_.last_name as last_nam4_2_, client0_.password as password5_2_ from client client0_
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_, loan1_.percentage as percenta4_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.client_id as client_i9_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.client_id as client_i9_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.thru_date as thru_dat7_1_1_, cards0_.type as type8_1_1_ from card cards0_ where cards0_.client_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_, loan1_.percentage as percenta4_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select cards0_.client_id as client_i9_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.client_id as client_i9_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.thru_date as thru_dat7_1_1_, cards0_.type as type8_1_1_ from card cards0_ where cards0_.client_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select clientloan0_.client_id as client_i4_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, loan1_.id as id1_4_2_, loan1_.max_amount as max_amou2_4_2_, loan1_.name as name3_4_2_, loan1_.percentage as percenta4_4_2_ from client_loan clientloan0_ left outer join loan loan1_ on clientloan0_.loan_id=loan1_.id where clientloan0_.client_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select cards0_.client_id as client_i9_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.cardholder as cardhold2_1_1_, cards0_.client_id as client_i9_1_1_, cards0_.color as color3_1_1_, cards0_.cvv as cvv4_1_1_, cards0_.from_date as from_dat5_1_1_, cards0_.number as number6_1_1_, cards0_.thru_date as thru_dat7_1_1_, cards0_.type as type8_1_1_ from card cards0_ where cards0_.client_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
2021-12-09 09:34:13.279  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@32015fda, testMethod = existClient@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2021-12-09 09:34:13.284  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@278fd447, testMethod = existTypeRepository@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@32ec563]; rollback [true]
Hibernate: select transactio0_.id as id1_6_, transactio0_.account_id as account_6_6_, transactio0_.amount as amount2_6_, transactio0_.date as date3_6_, transactio0_.description as descript4_6_, transactio0_.type as type5_6_ from transaction transactio0_
Hibernate: select account0_.id as id1_0_0_, account0_.balance as balance2_0_0_, account0_.client_id as client_i5_0_0_, account0_.creation_date as creation3_0_0_, account0_.number as number4_0_0_, client1_.id as id1_2_1_, client1_.email as email2_2_1_, client1_.first_name as first_na3_2_1_, client1_.last_name as last_nam4_2_1_, client1_.password as password5_2_1_, cards2_.client_id as client_i9_1_2_, cards2_.id as id1_1_2_, cards2_.id as id1_1_3_, cards2_.cardholder as cardhold2_1_3_, cards2_.client_id as client_i9_1_3_, cards2_.color as color3_1_3_, cards2_.cvv as cvv4_1_3_, cards2_.from_date as from_dat5_1_3_, cards2_.number as number6_1_3_, cards2_.thru_date as thru_dat7_1_3_, cards2_.type as type8_1_3_, clientloan3_.client_id as client_i4_3_4_, clientloan3_.id as id1_3_4_, clientloan3_.id as id1_3_5_, clientloan3_.amount as amount2_3_5_, clientloan3_.client_id as client_i4_3_5_, clientloan3_.loan_id as loan_id5_3_5_, clientloan3_.payments as payments3_3_5_, loan4_.id as id1_4_6_, loan4_.max_amount as max_amou2_4_6_, loan4_.name as name3_4_6_, loan4_.percentage as percenta4_4_6_, transactio5_.account_id as account_6_6_7_, transactio5_.id as id1_6_7_, transactio5_.id as id1_6_8_, transactio5_.account_id as account_6_6_8_, transactio5_.amount as amount2_6_8_, transactio5_.date as date3_6_8_, transactio5_.description as descript4_6_8_, transactio5_.type as type5_6_8_ from account account0_ left outer join client client1_ on account0_.client_id=client1_.id left outer join card cards2_ on client1_.id=cards2_.client_id left outer join client_loan clientloan3_ on client1_.id=clientloan3_.client_id left outer join loan loan4_ on clientloan3_.loan_id=loan4_.id left outer join transaction transactio5_ on account0_.id=transactio5_.account_id where account0_.id=?
Hibernate: select account0_.id as id1_0_0_, account0_.balance as balance2_0_0_, account0_.client_id as client_i5_0_0_, account0_.creation_date as creation3_0_0_, account0_.number as number4_0_0_, client1_.id as id1_2_1_, client1_.email as email2_2_1_, client1_.first_name as first_na3_2_1_, client1_.last_name as last_nam4_2_1_, client1_.password as password5_2_1_, cards2_.client_id as client_i9_1_2_, cards2_.id as id1_1_2_, cards2_.id as id1_1_3_, cards2_.cardholder as cardhold2_1_3_, cards2_.client_id as client_i9_1_3_, cards2_.color as color3_1_3_, cards2_.cvv as cvv4_1_3_, cards2_.from_date as from_dat5_1_3_, cards2_.number as number6_1_3_, cards2_.thru_date as thru_dat7_1_3_, cards2_.type as type8_1_3_, clientloan3_.client_id as client_i4_3_4_, clientloan3_.id as id1_3_4_, clientloan3_.id as id1_3_5_, clientloan3_.amount as amount2_3_5_, clientloan3_.client_id as client_i4_3_5_, clientloan3_.loan_id as loan_id5_3_5_, clientloan3_.payments as payments3_3_5_, loan4_.id as id1_4_6_, loan4_.max_amount as max_amou2_4_6_, loan4_.name as name3_4_6_, loan4_.percentage as percenta4_4_6_, transactio5_.account_id as account_6_6_7_, transactio5_.id as id1_6_7_, transactio5_.id as id1_6_8_, transactio5_.account_id as account_6_6_8_, transactio5_.amount as amount2_6_8_, transactio5_.date as date3_6_8_, transactio5_.description as descript4_6_8_, transactio5_.type as type5_6_8_ from account account0_ left outer join client client1_ on account0_.client_id=client1_.id left outer join card cards2_ on client1_.id=cards2_.client_id left outer join client_loan clientloan3_ on client1_.id=clientloan3_.client_id left outer join loan loan4_ on clientloan3_.loan_id=loan4_.id left outer join transaction transactio5_ on account0_.id=transactio5_.account_id where account0_.id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select clientloan0_.loan_id as loan_id5_3_0_, clientloan0_.id as id1_3_0_, clientloan0_.id as id1_3_1_, clientloan0_.amount as amount2_3_1_, clientloan0_.client_id as client_i4_3_1_, clientloan0_.loan_id as loan_id5_3_1_, clientloan0_.payments as payments3_3_1_, client1_.id as id1_2_2_, client1_.email as email2_2_2_, client1_.first_name as first_na3_2_2_, client1_.last_name as last_nam4_2_2_, client1_.password as password5_2_2_ from client_loan clientloan0_ left outer join client client1_ on clientloan0_.client_id=client1_.id where clientloan0_.loan_id=?
Hibernate: select accounts0_.client_id as client_i5_0_0_, accounts0_.id as id1_0_0_, accounts0_.id as id1_0_1_, accounts0_.balance as balance2_0_1_, accounts0_.client_id as client_i5_0_1_, accounts0_.creation_date as creation3_0_1_, accounts0_.number as number4_0_1_ from account accounts0_ where accounts0_.client_id=?
Hibernate: select transactio0_.account_id as account_6_6_0_, transactio0_.id as id1_6_0_, transactio0_.id as id1_6_1_, transactio0_.account_id as account_6_6_1_, transactio0_.amount as amount2_6_1_, transactio0_.date as date3_6_1_, transactio0_.description as descript4_6_1_, transactio0_.type as type5_6_1_ from transaction transactio0_ where transactio0_.account_id=?
2021-12-09 09:34:13.314  INFO 2684 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@3a459f84 testClass = RepositoriesTest, testInstance = com.mindhub.homebanking.RepositoriesTest@278fd447, testMethod = existTypeRepository@RepositoriesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@212a3c52 testClass = RepositoriesTest, locations = '{}', classes = '{class com.mindhub.homebanking.HomebankingApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4782e1b6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7d449ddc, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17cd8aca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c9df616, [ImportsContextCustomizer@79238123 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f60f8ee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@317fad0d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
